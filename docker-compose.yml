services:
  nginx:
    image: openresty/openresty:1.21.4.1-alpine
    container_name: nginx
    ports:
      - "8080:80"
    networks:
      - observability
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ./nginx/delay.lua:/usr/local/openresty/nginx/html/delay.lua:ro

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command:
      - '-nginx.scrape-uri=http://nginx/stub_status'
    depends_on:
      - nginx
    ports:
      - "9113:9113"
    networks:
      - observability

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    ports:
      - "8081:8081"
    command: "--port 8081"
    networks:
      - observability
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - observability
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - loki
      - prometheus

  locust:
    image: locustio/locust
    container_name: locust
    ports:
      - "8089:8089"
    volumes:
      - ./locust:/mnt/locust
    working_dir: /mnt/locust
    command: -f locustfile.py --host=http://nginx
    networks:
      - observability

  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - observability
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - loki-data:/loki
    restart: unless-stopped
    
  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config-final.yaml:/etc/promtail/promtail.yaml:ro
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - observability
    depends_on:
      - loki
      
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    networks:
      - observability
    command: -config.file=/etc/tempo/tempo-config.yaml
    volumes:
      - ./tempo/tempo-config.yaml:/etc/tempo/tempo-config.yaml:ro
      - tempo-data:/var/tempo
    restart: unless-stopped
      
  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - observability
    restart: unless-stopped

networks:
  observability:

volumes:
  loki-data:
  tempo-data:
